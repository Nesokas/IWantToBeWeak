<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_still</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp= 0;
hsp = 0;
grav = 0.5;
left_or_right = 0; // left - 0 | right - 1
grounded = 0; //used to verify if we are on the floor
superRunning = false;
REGULAR_JUMP_SPEED = -7; 
doubleJumped = false; //true if the player already jumped while in mid air
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Key_Left = keyboard_check_direct(ord('A'));
Key_Right = keyboard_check_direct(ord('D'));
Key_Jump = keyboard_check_pressed(ord('W'));
Key_Run = keyboard_check_direct(vk_shift);
//Key_SuperRun = keyboard_check_direct(vk_lcontrol);



if(Key_Left)
{
    left_or_right = 0;
    image_xscale = -1;
    
    if(Key_Run)
    {
        sprite_index = spr_run
        superRunning = false;
        hsp = -6;
    }
/*    else if(Key_SuperRun)
    {
        sprite_index = spr_superSpeed;
        if(!superRunning)
        {
            y = y - sprite_yoffset/2;   
        }
        superRunning = true;
        hsp = -8;
    }
*/
     else
    {
       superRunning = false;
       sprite_index = spr_walk
       hsp = -4;
    }

}

if(Key_Right)
{
    left_or_right = 1;
    image_xscale = 1;
    if(Key_Run)
    {
    //    superRunning = false;
        sprite_index = spr_run
        hsp = 6;
    }
/*    else if(Key_SuperRun)
    {
        sprite_index = spr_superSpeed;
        if(!superRunning)
        {
            y = y - sprite_yoffset/2;   
        }
        superRunning = true;
        hsp = 8;
   }*/ 
    else
    {
       // superRunning = false;
        sprite_index = spr_walk
        hsp = 4;
    }

}

if((Key_Right &amp;&amp; Key_Left) or (!Key_Right &amp;&amp; !Key_Left))
{

    sprite_index = spr_still
    superRunning = false;
    hsp = 0;
}

if(Key_Jump)
{
    if(grounded) {
        vsp = REGULAR_JUMP_SPEED;
    } else {
        if (!doubleJumped) {
            doubleJumped = true;
            vsp = REGULAR_JUMP_SPEED;
        }
    }
    
}

vsp += grav;

if place_meeting(x, y+vsp, par_wall)
{
    while (!place_meeting(x, y+1, par_wall)) y+=1;
    vsp = 0;
    grounded = 1;
    doubleJumped = false;
}
else
{
    grounded = 0;
}

if place_meeting(x+hsp, y, par_wall)
{
    while (!place_meeting(x+sign(hsp), y, par_wall)) x+=sign(hsp);
    hsp = 0;
}

x += hsp;
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
